---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Medical text containing drug mentions\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"drugs\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of
        drug names found in the text\"\n    }\n  },\n  \"required\": [\n    \"drugs\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Extract drug names mentioned in medical text"},{"role":"user","content":"##
        Input Values\n```json\n{\n  \"text\": \"Patient developed headache after taking
        aspirin.\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT:
        You must respond with valid JSON that matches this structure:\n```json\n{\n  \"drugs\":
        [\n    \"example item\"\n  ]\n}\n```\n\nRequired fields: drugs\n\nEnsure your
        response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.16.0
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.5
      Content-Type:
      - application/json
      Authorization:
      - Bearer <REDACTED>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '1806'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 12 Aug 2025 10:02:59 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '712'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1011'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9906'
      X-Ratelimit-Remaining-Tokens:
      - '199607'
      X-Ratelimit-Reset-Requests:
      - 13m24.911s
      X-Ratelimit-Reset-Tokens:
      - 117ms
      X-Request-Id:
      - req_0719c2d9c4e84fdc876b5e0973681366
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=wX.C.eMLLUXwdE6UVhF0k25nINpl7WjZdksLfQznDlo-1754992979-1.0.1.1-xDso5eV0JQSxNHSTtw.oCHEhvWCpPxFSuIGoqZ0aePuS9D7ZPJYirAtT1x.Yu.H_SSa5sq1fOSyRlNvXyWqOXIMonsAe2RPHlgHq0lx3PGQ;
        path=/; expires=Tue, 12-Aug-25 10:32:59 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=ijyr7Cqw_lGhMxkzRZjoKKrbEBi37KM36tkvLNLouC4-1754992979305-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 96df23e1aafb3c8a-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-C3g8IAKrd4uaLfQgVvovVgvv6li4Y",
          "object": "chat.completion",
          "created": 1754992978,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"drugs\": [\n    \"aspirin\"\n  ]\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 397,
            "completion_tokens": 23,
            "total_tokens": 420,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Tue, 12 Aug 2025 10:02:59 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Medical text containing adverse effects\"\n    }\n  },\n  \"required\":
        [\n    \"text\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\":
        \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\":
        {\n    \"effects\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\":
        \"string\"\n      },\n      \"description\": \"List of adverse effects found
        in the text\"\n    }\n  },\n  \"required\": [\n    \"effects\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Extract adverse drug effects mentioned in medical text"},{"role":"user","content":"##
        Input Values\n```json\n{\n  \"text\": \"Patient developed headache after taking
        aspirin.\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT:
        You must respond with valid JSON that matches this structure:\n```json\n{\n  \"effects\":
        [\n    \"example item\"\n  ]\n}\n```\n\nRequired fields: effects\n\nEnsure
        your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.16.0
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.5
      Content-Type:
      - application/json
      Authorization:
      - Bearer <REDACTED>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '1831'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 12 Aug 2025 10:03:00 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '708'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '729'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9905'
      X-Ratelimit-Remaining-Tokens:
      - '199601'
      X-Ratelimit-Reset-Requests:
      - 13m32.406s
      X-Ratelimit-Reset-Tokens:
      - 119ms
      X-Request-Id:
      - req_3226c54c3a664b41a9154142b9b4a4d5
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=5DJzS.CVtorDAFQWIJesq_BHrUPjTk5IAVhJodNHNHo-1754992980-1.0.1.1-KMd1UM32KCNdg0sVxHuPj2vwam_DPZQPPZVplSKqGZASLCPcQK46SpHTLifHDHaE6HoIidMRdQq_dCe1qeuLF.XC2GscIS2T9sR_VAPC7NU;
        path=/; expires=Tue, 12-Aug-25 10:33:00 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=YiJ2TW4VyfVQsnn9.xWILy4vR33_vyAsYUyCR19wgd8-1754992980168-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 96df23e8dfa73c8a-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-C3g8JJuDiS1xIjihW6gPeq7e3Qxb5",
          "object": "chat.completion",
          "created": 1754992979,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"effects\": [\n    \"headache\"\n  ]\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 395,
            "completion_tokens": 22,
            "total_tokens": 417,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Tue, 12 Aug 2025 10:03:00 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Original medical text\"\n    },\n    \"drugs\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"string\"\n      },\n      \"description\": \"Extracted
        drug names\"\n    },\n    \"effects\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"string\"\n      },\n      \"description\": \"Extracted
        adverse effects\"\n    }\n  },\n  \"required\": [\n    \"text\",\n    \"drugs\",\n    \"effects\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"has_ade\": {\n      \"type\": \"boolean\",\n      \"description\":
        \"True if adverse drug event is present, false otherwise\"\n    },\n    \"confidence\":
        {\n      \"type\": \"number\",\n      \"description\": \"Confidence score
        between 0.0 and 1.0\"\n    }\n  },\n  \"required\": [\n    \"has_ade\",\n    \"confidence\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Classify whether extracted drugs and effects indicate an adverse
        drug event"},{"role":"user","content":"## Input Values\n```json\n{\n  \"text\":
        \"Patient developed headache after taking aspirin.\",\n  \"drugs\": [\n    \"aspirin\"\n  ],\n  \"effects\":
        [\n    \"headache\"\n  ]\n}\n```\n\nRespond with the corresponding output
        schema fields wrapped in a ```json ``` block,\nstarting with the heading `##
        Output values`.\n\nIMPORTANT: You must respond with valid JSON that matches
        this structure:\n```json\n{\n  \"has_ade\": true,\n  \"confidence\": 3.14\n}\n```\n\nRequired
        fields: has_ade, confidence\n\nEnsure your response:\n1. Is valid JSON (properly
        quoted strings, no trailing commas)\n2. Includes all required fields\n3. Uses
        the correct data types for each field\n4. Is wrapped in ```json``` markdown
        code blocks\n"}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.16.0
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.5
      Content-Type:
      - application/json
      Authorization:
      - Bearer <REDACTED>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '2396'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 12 Aug 2025 10:03:00 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '556'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '577'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9905'
      X-Ratelimit-Remaining-Tokens:
      - '199478'
      X-Ratelimit-Reset-Requests:
      - 13m40.164s
      X-Ratelimit-Reset-Tokens:
      - 156ms
      X-Request-Id:
      - req_1a9a1a42132d4eac8fc0e31f2d59cf41
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=gkChwsU5LsPHqTUxmq0UpkZjTSbjuvTuW4AJDTV3FPE-1754992980-1.0.1.1-71nUqIbeTUgngAQz2huwa1sJZEZQ3Ba_qfYQuOwvaYFkOHMMGzB.oWlM93QFFMxqAVf5.doh3bs2810Fh4YbF0qRNujN94cKwIWTLxr7lp8;
        path=/; expires=Tue, 12-Aug-25 10:33:00 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=jTUtecGtSMir4ZkTampkTZW1vxjWHeog8..9_Qley58-1754992980903-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 96df23ee595f3c8a-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-C3g8KULg6BtrTLB2HRlHuLAyTfczE",
          "object": "chat.completion",
          "created": 1754992980,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"has_ade\": true,\n  \"confidence\": 0.85\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 545,
            "completion_tokens": 27,
            "total_tokens": 572,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Tue, 12 Aug 2025 10:03:00 GMT
recorded_with: VCR 6.3.1
