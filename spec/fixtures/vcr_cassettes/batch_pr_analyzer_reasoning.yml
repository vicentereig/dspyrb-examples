---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"pr_batch\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"PullRequest\"\n          },\n          \"pr\":
        {\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"ellipsis_summary\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"pr\",\n          \"title\",\n          \"description\",\n          \"ellipsis_summary\"\n        ],\n        \"description\":
        \"ChangelogGenerator::PullRequest struct\"\n      },\n      \"description\":
        \"Batch of pull requests to analyze together\"\n    }\n  },\n  \"required\":
        [\n    \"pr_batch\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\":
        \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\":
        {\n    \"theme_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\":
        \"string\"\n      },\n      \"description\": \"Names of themes discovered
        from the PR batch\"\n    },\n    \"theme_descriptions\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\":
        \"Descriptions for each theme\"\n    },\n    \"theme_pr_ids\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"array\",\n        \"items\":
        {\n          \"type\": \"integer\"\n        }\n      },\n      \"description\":
        \"PR IDs belonging to each theme\"\n    },\n    \"pr_theme_mapping\": {\n      \"type\":
        \"object\",\n      \"propertyNames\": {\n        \"type\": \"string\"\n      },\n      \"additionalProperties\":
        {\n        \"type\": \"string\"\n      },\n      \"description\": \"Mapping
        of PR ID (as string) to theme name\"\n    },\n    \"reasoning\": {\n      \"type\":
        \"string\",\n      \"description\": \"Step by step reasoning process\"\n    }\n  },\n  \"required\":
        [\n    \"theme_names\",\n    \"theme_descriptions\",\n    \"theme_pr_ids\",\n    \"pr_theme_mapping\",\n    \"reasoning\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Analyze a batch of pull requests to identify themes and relationships.
        Think step by step."},{"role":"user","content":"## Input Values\n```json\n{\n  \"pr_batch\":
        [\n    {\n      \"pr\": 3170,\n      \"title\": \"Add PostgreSQL metrics dashboard\",\n      \"description\":
        \"Implements built-in metrics for CPU, memory, and disk usage tracking\",\n      \"ellipsis_summary\":
        \"Added comprehensive metrics dashboard for PostgreSQL instances\"\n    },\n    {\n      \"pr\":
        3202,\n      \"title\": \"Enhance metrics API endpoints\",\n      \"description\":
        \"Adds new API endpoints for retrieving PostgreSQL performance metrics\",\n      \"ellipsis_summary\":
        \"Extended metrics API with additional endpoints\"\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"theme_names\": [\n    \"example
        item\"\n  ],\n  \"theme_descriptions\": [\n    \"example item\"\n  ],\n  \"theme_pr_ids\":
        [\n    \"example item\"\n  ],\n  \"pr_theme_mapping\": {\n    \"nested\":
        \"object\"\n  },\n  \"reasoning\": \"Step by step reasoning process\"\n}\n```\n\nRequired
        fields: theme_names, theme_descriptions, theme_pr_ids, pr_theme_mapping, reasoning\n\nEnsure
        your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - x64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - Linux
      X-Stainless-Package-Version:
      - 0.13.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.8
      Content-Type:
      - application/json
      Authorization:
      - Bearer <REDACTED>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '4362'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 24 Jul 2025 18:05:49 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '5822'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '6030'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9998'
      X-Ratelimit-Remaining-Tokens:
      - '199035'
      X-Ratelimit-Reset-Requests:
      - 10.6s
      X-Ratelimit-Reset-Tokens:
      - 289ms
      X-Request-Id:
      - req_0009790eff47a86aa6eec9efee2daa92
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=LKvPy0.cScuvP7rjU3aKjJt7Z_UlJiFQm_eE8bYh3I4-1753380349-1.0.1.1-yPWn8YMj6BrKhKqpD2fJY0ZH.GqHVeK33voi.OZ0oJ7YA5B.7tFCHP6uYJBecfZIcVnMnKohX.hpdY2Op1J2HobyR4rV4CscVGsfCqnPJl4;
        path=/; expires=Thu, 24-Jul-25 18:35:49 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=RV5ldpajUmabXmOUGFV_NLsOKHQMm2ASutUGCzLYUF0-1753380349396-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 964558e96dbbefa3-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-Bwuc3L53Px3x7hSXkoOmT1IWs3sFU",
          "object": "chat.completion",
          "created": 1753380343,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"theme_names\": [\n    \"PostgreSQL Metrics\"\n  ],\n  \"theme_descriptions\": [\n    \"Improvements and enhancements related to PostgreSQL metrics tracking and API.\"\n  ],\n  \"theme_pr_ids\": [\n    [\n      3170,\n      3202\n    ]\n  ],\n  \"pr_theme_mapping\": {\n    \"3170\": \"PostgreSQL Metrics\",\n    \"3202\": \"PostgreSQL Metrics\"\n  },\n  \"reasoning\": \"The pull requests focus on enhancing PostgreSQL metrics tracking and API capabilities. PR 3170 introduces a metrics dashboard, while PR 3202 adds new API endpoints for these metrics. Both PRs are related to the theme of PostgreSQL metrics, thus they are grouped under the same theme.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 937,
            "completion_tokens": 167,
            "total_tokens": 1104,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": null
        }
  recorded_at: Thu, 24 Jul 2025 18:05:49 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"pr_batch\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"PullRequest\"\n          },\n          \"pr\":
        {\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"ellipsis_summary\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"pr\",\n          \"title\",\n          \"description\",\n          \"ellipsis_summary\"\n        ],\n        \"description\":
        \"ChangelogGenerator::PullRequest struct\"\n      },\n      \"description\":
        \"Batch of pull requests to analyze together\"\n    }\n  },\n  \"required\":
        [\n    \"pr_batch\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\":
        \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\":
        {\n    \"theme_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\":
        \"string\"\n      },\n      \"description\": \"Names of themes discovered
        from the PR batch\"\n    },\n    \"theme_descriptions\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\":
        \"Descriptions for each theme\"\n    },\n    \"theme_pr_ids\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"array\",\n        \"items\":
        {\n          \"type\": \"integer\"\n        }\n      },\n      \"description\":
        \"PR IDs belonging to each theme\"\n    },\n    \"pr_ids_list\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\":
        \"List of PR IDs in order\"\n    },\n    \"pr_theme_assignments\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\":
        \"Theme names for each PR ID (parallel to pr_ids_list)\"\n    },\n    \"reasoning\":
        {\n      \"type\": \"string\",\n      \"description\": \"Step by step reasoning
        process\"\n    }\n  },\n  \"required\": [\n    \"theme_names\",\n    \"theme_descriptions\",\n    \"theme_pr_ids\",\n    \"pr_ids_list\",\n    \"pr_theme_assignments\",\n    \"reasoning\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Analyze a batch of pull requests to identify themes and relationships.
        Think step by step."},{"role":"user","content":"## Input Values\n```json\n{\n  \"pr_batch\":
        [\n    {\n      \"pr\": 3170,\n      \"title\": \"Add PostgreSQL metrics dashboard\",\n      \"description\":
        \"Implements built-in metrics for CPU, memory, and disk usage tracking\",\n      \"ellipsis_summary\":
        \"Added comprehensive metrics dashboard for PostgreSQL instances\"\n    },\n    {\n      \"pr\":
        3202,\n      \"title\": \"Enhance metrics API endpoints\",\n      \"description\":
        \"Adds new API endpoints for retrieving PostgreSQL performance metrics\",\n      \"ellipsis_summary\":
        \"Extended metrics API with additional endpoints\"\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"theme_names\": [\n    \"example
        item\"\n  ],\n  \"theme_descriptions\": [\n    \"example item\"\n  ],\n  \"theme_pr_ids\":
        [\n    \"example item\"\n  ],\n  \"pr_ids_list\": [\n    \"example item\"\n  ],\n  \"pr_theme_assignments\":
        [\n    \"example item\"\n  ],\n  \"reasoning\": \"Step by step reasoning process\"\n}\n```\n\nRequired
        fields: theme_names, theme_descriptions, theme_pr_ids, pr_ids_list, pr_theme_assignments,
        reasoning\n\nEnsure your response:\n1. Is valid JSON (properly quoted strings,
        no trailing commas)\n2. Includes all required fields\n3. Uses the correct
        data types for each field\n4. Is wrapped in ```json``` markdown code blocks\n"}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - x64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - Linux
      X-Stainless-Package-Version:
      - 0.13.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.8
      Content-Type:
      - application/json
      Authorization:
      - Bearer <REDACTED>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '4556'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 24 Jul 2025 19:19:25 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '3258'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '3264'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9998'
      X-Ratelimit-Remaining-Tokens:
      - '198992'
      X-Ratelimit-Reset-Requests:
      - 13.575s
      X-Ratelimit-Reset-Tokens:
      - 302ms
      X-Request-Id:
      - req_d52eed609e31db5b649fa1b3b1ac2f57
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=WQVDY1eVCjkgJ.UbaXZcOl8FD9rCQamGd5YoFo1FOeM-1753384765-1.0.1.1-B1K9ppsLoNvMHrcyLJ3tHmRDV9GD1MXR0Tx_i.O_vibz8D9uUDcG2dLY9_AeKPq2i6pWt3dsG8j7uBhrGLsLMr.Cn_i0N0voESx2_nxGaH0;
        path=/; expires=Thu, 24-Jul-25 19:49:25 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=NSZOZRHoeGRWtBPXSRv06D_JM_athc.f_F5sqYFlfX0-1753384765256-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 9645c4c93e10435b-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BwvlKmUaP7Pi2ReShCZsjM4IH0FBg",
          "object": "chat.completion",
          "created": 1753384762,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"theme_names\": [\n    \"PostgreSQL Metrics\"\n  ],\n  \"theme_descriptions\": [\n    \"Improvements and enhancements related to PostgreSQL metrics tracking and API endpoints.\"\n  ],\n  \"theme_pr_ids\": [\n    [\n      3170,\n      3202\n    ]\n  ],\n  \"pr_ids_list\": [\n    3170,\n    3202\n  ],\n  \"pr_theme_assignments\": [\n    \"PostgreSQL Metrics\",\n    \"PostgreSQL Metrics\"\n  ],\n  \"reasoning\": \"The two pull requests focus on enhancing PostgreSQL metrics. The first PR (3170) introduces a metrics dashboard, while the second PR (3202) adds new API endpoints for retrieving these metrics. Both PRs are related to the theme of PostgreSQL metrics, thus they are grouped under the same theme.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 990,
            "completion_tokens": 184,
            "total_tokens": 1174,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": null
        }
  recorded_at: Thu, 24 Jul 2025 19:19:25 GMT
recorded_with: VCR 6.3.1
