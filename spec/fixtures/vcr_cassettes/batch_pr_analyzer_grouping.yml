---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"pr_batch\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"PullRequest\"\n          },\n          \"pr\":
        {\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"ellipsis_summary\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"pr\",\n          \"title\",\n          \"description\",\n          \"ellipsis_summary\"\n        ],\n        \"description\":
        \"ChangelogGenerator::PullRequest struct\"\n      },\n      \"description\":
        \"Batch of pull requests to analyze together\"\n    }\n  },\n  \"required\":
        [\n    \"pr_batch\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\":
        \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\":
        {\n    \"theme_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\":
        \"string\"\n      },\n      \"description\": \"Names of themes discovered
        from the PR batch\"\n    },\n    \"theme_descriptions\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\":
        \"Descriptions for each theme\"\n    },\n    \"theme_pr_ids\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"array\",\n        \"items\":
        {\n          \"type\": \"integer\"\n        }\n      },\n      \"description\":
        \"PR IDs belonging to each theme\"\n    },\n    \"pr_theme_mapping\": {\n      \"type\":
        \"object\",\n      \"propertyNames\": {\n        \"type\": \"string\"\n      },\n      \"additionalProperties\":
        {\n        \"type\": \"string\"\n      },\n      \"description\": \"Mapping
        of PR ID (as string) to theme name\"\n    },\n    \"reasoning\": {\n      \"type\":
        \"string\",\n      \"description\": \"Step by step reasoning process\"\n    }\n  },\n  \"required\":
        [\n    \"theme_names\",\n    \"theme_descriptions\",\n    \"theme_pr_ids\",\n    \"pr_theme_mapping\",\n    \"reasoning\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Analyze a batch of pull requests to identify themes and relationships.
        Think step by step."},{"role":"user","content":"## Input Values\n```json\n{\n  \"pr_batch\":
        [\n    {\n      \"pr\": 3170,\n      \"title\": \"Add PostgreSQL metrics dashboard\",\n      \"description\":
        \"Implements built-in metrics for CPU, memory, and disk usage tracking\",\n      \"ellipsis_summary\":
        \"Added comprehensive metrics dashboard for PostgreSQL instances\"\n    },\n    {\n      \"pr\":
        3202,\n      \"title\": \"Enhance metrics API endpoints\",\n      \"description\":
        \"Adds new API endpoints for retrieving PostgreSQL performance metrics\",\n      \"ellipsis_summary\":
        \"Extended metrics API with additional endpoints\"\n    },\n    {\n      \"pr\":
        3248,\n      \"title\": \"Implement firewall rule management\",\n      \"description\":
        \"Adds UI and API for managing PostgreSQL firewall rules\",\n      \"ellipsis_summary\":
        \"New firewall rule management features\"\n    },\n    {\n      \"pr\": 3274,\n      \"title\":
        \"Add IP allowlist validation\",\n      \"description\": \"Validates and sanitizes
        IP addresses in firewall rules\",\n      \"ellipsis_summary\": \"Improved
        firewall rule validation\"\n    },\n    {\n      \"pr\": 3312,\n      \"title\":
        \"GitHub runner performance improvements\",\n      \"description\": \"Optimizes
        runner startup time and resource allocation\",\n      \"ellipsis_summary\":
        \"Faster GitHub runner provisioning\"\n    },\n    {\n      \"pr\": 3366,\n      \"title\":
        \"Add runner location preferences\",\n      \"description\": \"Allows users
        to specify preferred geographic locations for runners\",\n      \"ellipsis_summary\":
        \"Geographic preference support for runners\"\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"theme_names\": [\n    \"example
        item\"\n  ],\n  \"theme_descriptions\": [\n    \"example item\"\n  ],\n  \"theme_pr_ids\":
        [\n    \"example item\"\n  ],\n  \"pr_theme_mapping\": {\n    \"nested\":
        \"object\"\n  },\n  \"reasoning\": \"Step by step reasoning process\"\n}\n```\n\nRequired
        fields: theme_names, theme_descriptions, theme_pr_ids, pr_theme_mapping, reasoning\n\nEnsure
        your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - x64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - Linux
      X-Stainless-Package-Version:
      - 0.13.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.8
      Content-Type:
      - application/json
      Authorization:
      - Bearer <REDACTED>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '5359'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 24 Jul 2025 18:05:43 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '6457'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '6464'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '198806'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 358ms
      X-Request-Id:
      - req_e5764b0a2ebaf5feb7200352f4f4bab6
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=SXdP2QBH0FeoCfIl2RDiiVRC5v4NivmT82_sRBEs1HU-1753380343-1.0.1.1-xrV1FyGZ.dIHZjnpjzX4T1qkiMUeD_vurt3dgQXvCfxooA12LbKW01L5PHB11wZ1TQnwk1pVwhKonRf7wEs0o8gzd3myGeenkFL9hSDSpTQ;
        path=/; expires=Thu, 24-Jul-25 18:35:43 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=tUutuElOurqfD53E5HM1mZhnbOU3lynE1Kza.0xOu3Q-1753380343139-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 964558bfb977dd37-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BwubwMf9IlwW6WCoEvulwEBnlI0PZ",
          "object": "chat.completion",
          "created": 1753380336,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"theme_names\": [\n    \"PostgreSQL Metrics\",\n    \"Firewall Management\",\n    \"GitHub Runner Optimization\"\n  ],\n  \"theme_descriptions\": [\n    \"Improvements and features related to monitoring PostgreSQL performance metrics.\",\n    \"Enhancements for managing firewall rules in PostgreSQL.\",\n    \"Performance improvements for GitHub runners.\"\n  ],\n  \"theme_pr_ids\": [\n    [3170, 3202],\n    [3248, 3274],\n    [3312, 3366]\n  ],\n  \"pr_theme_mapping\": {\n    \"3170\": \"PostgreSQL Metrics\",\n    \"3202\": \"PostgreSQL Metrics\",\n    \"3248\": \"Firewall Management\",\n    \"3274\": \"Firewall Management\",\n    \"3312\": \"GitHub Runner Optimization\",\n    \"3366\": \"GitHub Runner Optimization\"\n  },\n  \"reasoning\": \"The pull requests can be grouped into three main themes based on their titles and descriptions. The first theme, 'PostgreSQL Metrics', includes PRs 3170 and 3202, which focus on metrics and API enhancements for PostgreSQL. The second theme, 'Firewall Management', encompasses PRs 3248 and 3274, which deal with managing and validating firewall rules. Lastly, the third theme, 'GitHub Runner Optimization', consists of PRs 3312 and 3366, which aim to improve the performance and preferences of GitHub runners.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 1138,
            "completion_tokens": 308,
            "total_tokens": 1446,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": null
        }
  recorded_at: Thu, 24 Jul 2025 18:05:43 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"pr_batch\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"PullRequest\"\n          },\n          \"pr\":
        {\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"ellipsis_summary\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"pr\",\n          \"title\",\n          \"description\",\n          \"ellipsis_summary\"\n        ],\n        \"description\":
        \"ChangelogGenerator::PullRequest struct\"\n      },\n      \"description\":
        \"Batch of pull requests to analyze together\"\n    }\n  },\n  \"required\":
        [\n    \"pr_batch\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\":
        \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\":
        {\n    \"theme_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\":
        \"string\"\n      },\n      \"description\": \"Names of themes discovered
        from the PR batch\"\n    },\n    \"theme_descriptions\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\":
        \"Descriptions for each theme\"\n    },\n    \"theme_pr_ids\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"array\",\n        \"items\":
        {\n          \"type\": \"integer\"\n        }\n      },\n      \"description\":
        \"PR IDs belonging to each theme\"\n    },\n    \"pr_ids_list\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\":
        \"List of PR IDs in order\"\n    },\n    \"pr_theme_assignments\": {\n      \"type\":
        \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\":
        \"Theme names for each PR ID (parallel to pr_ids_list)\"\n    },\n    \"reasoning\":
        {\n      \"type\": \"string\",\n      \"description\": \"Step by step reasoning
        process\"\n    }\n  },\n  \"required\": [\n    \"theme_names\",\n    \"theme_descriptions\",\n    \"theme_pr_ids\",\n    \"pr_ids_list\",\n    \"pr_theme_assignments\",\n    \"reasoning\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Analyze a batch of pull requests to identify themes and relationships.
        Think step by step."},{"role":"user","content":"## Input Values\n```json\n{\n  \"pr_batch\":
        [\n    {\n      \"pr\": 3170,\n      \"title\": \"Add PostgreSQL metrics dashboard\",\n      \"description\":
        \"Implements built-in metrics for CPU, memory, and disk usage tracking\",\n      \"ellipsis_summary\":
        \"Added comprehensive metrics dashboard for PostgreSQL instances\"\n    },\n    {\n      \"pr\":
        3202,\n      \"title\": \"Enhance metrics API endpoints\",\n      \"description\":
        \"Adds new API endpoints for retrieving PostgreSQL performance metrics\",\n      \"ellipsis_summary\":
        \"Extended metrics API with additional endpoints\"\n    },\n    {\n      \"pr\":
        3248,\n      \"title\": \"Implement firewall rule management\",\n      \"description\":
        \"Adds UI and API for managing PostgreSQL firewall rules\",\n      \"ellipsis_summary\":
        \"New firewall rule management features\"\n    },\n    {\n      \"pr\": 3274,\n      \"title\":
        \"Add IP allowlist validation\",\n      \"description\": \"Validates and sanitizes
        IP addresses in firewall rules\",\n      \"ellipsis_summary\": \"Improved
        firewall rule validation\"\n    },\n    {\n      \"pr\": 3312,\n      \"title\":
        \"GitHub runner performance improvements\",\n      \"description\": \"Optimizes
        runner startup time and resource allocation\",\n      \"ellipsis_summary\":
        \"Faster GitHub runner provisioning\"\n    },\n    {\n      \"pr\": 3366,\n      \"title\":
        \"Add runner location preferences\",\n      \"description\": \"Allows users
        to specify preferred geographic locations for runners\",\n      \"ellipsis_summary\":
        \"Geographic preference support for runners\"\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"theme_names\": [\n    \"example
        item\"\n  ],\n  \"theme_descriptions\": [\n    \"example item\"\n  ],\n  \"theme_pr_ids\":
        [\n    \"example item\"\n  ],\n  \"pr_ids_list\": [\n    \"example item\"\n  ],\n  \"pr_theme_assignments\":
        [\n    \"example item\"\n  ],\n  \"reasoning\": \"Step by step reasoning process\"\n}\n```\n\nRequired
        fields: theme_names, theme_descriptions, theme_pr_ids, pr_ids_list, pr_theme_assignments,
        reasoning\n\nEnsure your response:\n1. Is valid JSON (properly quoted strings,
        no trailing commas)\n2. Includes all required fields\n3. Uses the correct
        data types for each field\n4. Is wrapped in ```json``` markdown code blocks\n"}],"temperature":0.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - x64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - Linux
      X-Stainless-Package-Version:
      - 0.13.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.8
      Content-Type:
      - application/json
      Authorization:
      - Bearer <REDACTED>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '5553'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 24 Jul 2025 19:19:15 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '5558'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '5561'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '198763'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 371ms
      X-Request-Id:
      - req_97cd89eabb5a9bd65c2a9025e66160b2
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=0bZLS43BgEZQQPlixXZBNHBUQnDn.1hpMX7j897c1BU-1753384755-1.0.1.1-JdD134_Hnlt6xrBn1QJ5z30uK0YdX6XXV1pL__IZuUrRMBRHwUW5cK90rJlthjPy71dKJ0fIu9i.lvZrNKu9h3u0.8n.89t3h2dGKtOqStE;
        path=/; expires=Thu, 24-Jul-25 19:49:15 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=8_LFTsIyj09tUQyAmQwRXdq9.kEoz8ApcNXmqblhQno-1753384755177-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 9645c47bf8374f4e-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-Bwvl7u49Ahvg8gigDfBpekVf69HNI",
          "object": "chat.completion",
          "created": 1753384749,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"theme_names\": [\n    \"PostgreSQL Metrics\",\n    \"Firewall Management\",\n    \"GitHub Runner Optimization\"\n  ],\n  \"theme_descriptions\": [\n    \"Improvements and features related to monitoring PostgreSQL performance metrics.\",\n    \"Enhancements for managing firewall rules in PostgreSQL.\",\n    \"Performance improvements for GitHub runners.\"\n  ],\n  \"theme_pr_ids\": [\n    [\n      3170,\n      3202\n    ],\n    [\n      3248,\n      3274\n    ],\n    [\n      3312,\n      3366\n    ]\n  ],\n  \"pr_ids_list\": [\n    3170,\n    3202,\n    3248,\n    3274,\n    3312,\n    3366\n  ],\n  \"pr_theme_assignments\": [\n    \"PostgreSQL Metrics\",\n    \"PostgreSQL Metrics\",\n    \"Firewall Management\",\n    \"Firewall Management\",\n    \"GitHub Runner Optimization\",\n    \"GitHub Runner Optimization\"\n  ],\n  \"reasoning\": \"The pull requests can be grouped into three main themes based on their titles and descriptions. The first theme, 'PostgreSQL Metrics', includes PRs 3170 and 3202, which focus on metrics and API enhancements for PostgreSQL. The second theme, 'Firewall Management', encompasses PRs 3248 and 3274, which deal with firewall rule management and validation. The third theme, 'GitHub Runner Optimization', includes PRs 3312 and 3366, which aim to improve the performance of GitHub runners. Each PR is assigned to a theme based on its content.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 1191,
            "completion_tokens": 346,
            "total_tokens": 1537,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": null
        }
  recorded_at: Thu, 24 Jul 2025 19:19:15 GMT
recorded_with: VCR 6.3.1
